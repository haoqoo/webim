<?xml version="1.0" encoding="utf-8"?>
<comp:ColorShiftingTitleWindow xmlns:comp="com.jivesoftware.spark.*" xmlns:mx="http://www.adobe.com/2006/mxml" color="white"
							   title="{Localizator.getText('title.history.info.window')}" showCloseButton="true" close="close()" 
							   creationComplete="init()" width="700" height="500" preinitialize="preInit()">
	<mx:Style>
		.title {
			fontWeight: bold;
			fontSize: 12pt;
		}
	</mx:Style>
	<mx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.jivesoftware.spark.managers.Localizator;
			import com.jivesoftware.spark.managers.SparkManager;
			import com.jivesoftware.spark.ui.MessageBox;
			
			import mx.charts.DateTimeAxis;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.HRule;
			import mx.events.ChildExistenceChangedEvent;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.mxml.HTTPService;
			
			private var scrollTimer:Timer = new Timer(100, 1);
			
			
			[Bindable]
			public var from:String = null;
			
			[Bindable]
			public var to:String = null;
			
			private var jsonData:Object
			
			private var _currentMessageBox:MessageBox;
			
			public function preInit():void
			{
				
				//s.addEventListener(FaultEvent.FAULT, httpFault);  
			}
			
			public function init():void
			{
				var server:String = SparkManager.getConfigValueForKey("server");
				var httpUrl:String = "http://"+server+":9090/plugins/chatlogs?action=query&sender="+from+"&receiver="+to;								
				var s:HTTPService = new HTTPService();
				s.url = httpUrl;//加一个时间参数防止缓存		
				s.useProxy = false;
				s.showBusyCursor = true;
				s.addEventListener(ResultEvent.RESULT, getJson);
				s.send();
				trace(s);
				
				
			}
			
			protected function close():void 
			{
				PopUpManager.removePopUp(this);
			}
			
			public function getJson(event:ResultEvent):void{
				var re:String=event.result.toString();
				jsonData=JSON.decode(re);
				if(jsonData!=null){
					for each(var item in jsonData){
						trace(item.createDate);
						var messageTime:Date = 
						addUserMessage(item.sessionJID,item.sender,item.content,messageTime);
					}
				}
				//trace(jsonData);
				
			}
			
			private function _createMessageBox():MessageBox {
				var messageBox:MessageBox = new MessageBox();
				var queueScroll:Function = function():void { 
					scrollTimer.reset();
					scrollTimer.start();
				};
				messageBox.addEventListener(FlexEvent.CREATION_COMPLETE, queueScroll);
				messageBox.addEventListener(ChildExistenceChangedEvent.CHILD_ADD, queueScroll);
				messageBox.addEventListener(ChildExistenceChangedEvent.CHILD_ADD, function(evt:ChildExistenceChangedEvent):void { messageBox.invalidateSize(); });
				messageBox.percentWidth = 100;
				if(numChildren > 0)
				{
					var rule:HRule = new HRule();
					rule.percentWidth = 100;
					messageBoxShow.addChild(rule);
				}
				messageBoxShow.addChild(messageBox);
				
				return messageBox;
			}
			
			public function addUserMessage(userId:String, username:String, messageText:String, messageDate:Date):void {
				
				
					_currentMessageBox = _createMessageBox();
					_currentMessageBox.userId = userId;
					_currentMessageBox.username = username;
					_currentMessageBox.type = "user";
																						
				_currentMessageBox.addMessage(messageText, messageDate,  "dateDark");
			}
		]]>
	</mx:Script>
	
	
	
	<mx:VBox id="messageBoxShow" verticalScrollPolicy="on" verticalGap="0" horizontalGap="0" backgroundColor="white" width="100%" height="98%">
	
	</mx:VBox>
		

</comp:ColorShiftingTitleWindow>
